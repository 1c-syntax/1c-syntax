Перем ФайлШаблонов;
Перем СтруктураШаблона;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТаблицаШаблонов.Очистить();
	Для Каждого Строка Из ДеревоДанных.Строки Цикл
		Перебор(Строка);
	КонецЦикла;
	
КонецПроцедуры

Процедура Перебор(СтрокаРодителя)
	
	Для Каждого ПодчСтрока Из СтрокаРодителя.Строки Цикл
		Если СтрокаРодителя.Строки.Индекс(ПодчСтрока) = 0 И ПодчСтрока.БазовыйТип = "Строка"  Тогда
			СтрокаШаблонов = ТаблицаШаблонов.Добавить();
		КонецЕсли;
		Если СтрокаШаблонов<>Неопределено Тогда
			СтрокаШаблонов[СтруктураШаблона.Получить(СтрокаРодителя.Строки.Индекс(ПодчСтрока))] = ПодчСтрока.Значение;
		КонецЕсли;
		Перебор(ПодчСтрока);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗагрузить(Кнопка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = "Дерево значений(*.ДЗ)|*.ДЗ";
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ФайлШаблонов = ДиалогВыбораФайла.ПолноеИмяФайла;
		ДеревоДанных = ЗначениеИзФайла(ФайлШаблонов);
		ЭлементыФормы.ДеревоДанных.СоздатьКолонки();
		ЭлементыФормы.ДеревоДанных.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьЗначение("ПарсингШаблонов|ФайлШаблонов",ФайлШаблонов);
	СохранитьЗначение("ПарсингШаблонов|ВыгрузитьВФайл",ВыгрузитьВФайл);
КонецПроцедуры

Процедура ПриОткрытии()
	ФайлШаблонов = ВосстановитьЗначение("ПарсингШаблонов|ФайлШаблонов");
	ВыгрузитьВФайл = ВосстановитьЗначение("ПарсингШаблонов|ВыгрузитьВФайл");
	Если ФайлШаблонов<>Неопределено Тогда
		ДеревоДанных = ЗначениеИзФайла(ФайлШаблонов);
		ЭлементыФормы.ДеревоДанных.СоздатьКолонки();
		ЭлементыФормы.ДеревоДанных.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	КонецЕсли;
	СтруктураШаблона = Новый Массив;
	СтруктураШаблона.Добавить("Название");
	СтруктураШаблона.Добавить("ЭтоГруппа");
	СтруктураШаблона.Добавить("Предопределенный");
	СтруктураШаблона.Добавить("ЗаменятьСтроку");
	СтруктураШаблона.Добавить("Шаблон");
	
КонецПроцедуры

Процедура ВыгрузитьВФайлНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Заголовок = "Выберите файл для сохранения.";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ВыгрузитьВФайл = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры


Процедура ОсновныеДействияФормыВыгрузить(Кнопка)
	
	Текст = Новый ЗаписьТекста(ВыгрузитьВФайл, КодировкаТекста.UTF8, , , Символы.ПС);
	Текст.ЗаписатьСтроку("%YAML 1.2");
	Текст.ЗаписатьСтроку("---");
	Текст.ЗаписатьСтроку("");

	Для каждого СтрокаШаблонов Из ТаблицаШаблонов Цикл
		Если СтрокаШаблонов.ЭтоГруппа<>1 Тогда
			ЗаписатьШаблон(СтрокаШаблонов,Текст);
		КонецЕсли;
	КонецЦикла;
	
	Текст.Закрыть();
	
КонецПроцедуры

Процедура ЗаписатьШаблон(СтрокаШаблонов,Текст)
	
	//%YAML 1.2
	//---
	
	//- name: Для Каждого
	//  tabTrigger: для каждого
	//  scope: source.bsl
	//  description: Для Каждого - описание
	//  content: "Вкусный 
	//сочный
	//сниппет c $0 позиционированием курсора
	//и $1 двумя $2 параметрами,
	//	иногда с отступами,
	//	которые оформляются жесткими табами
	//и могут заканчиваться в любом месте" 
	
	Текст.ЗаписатьСтроку("- name: " + СтрокаШаблонов.Название);
	Текст.ЗаписатьСтроку("  tabTrigger: " + СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрокаШаблонов.ЗаменятьСтроку,"[",""),"]","")," ",""));
	Текст.ЗаписатьСтроку("  scope: source.bsl");
	Текст.ЗаписатьСтроку("  content: """ + ПроставитьНомераПараметров(СтрЗаменить(СтрокаШаблонов.Шаблон,"<?>","$0")) + """"); 
	Текст.ЗаписатьСтроку("");
	
КонецПроцедуры

Функция ПроставитьНомераПараметров(Шаблон)
	РегулярноеВыражение = Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражение.IgnoreCase=истина;
	РегулярноеВыражение.Global=истина;
	РегулярноеВыражение.Multiline=истина;
	РегулярноеВыражение.Pattern="<\?""?([^"",]*)""?([^>]*)>";
	НомерПараметра = 1;
	Matches=РегулярноеВыражение.Execute(Шаблон); //,"$ "+НомерПараметра+" $1");
	Для Каждого Match Из Matches Цикл
		Шаблон = СтрЗаменить(Шаблон,Match.Value,?(Match.SubMatches(0)<>"","${"+НомерПараметра+":"+СтрЗаменить(ТРег(Match.SubMatches(0))," ","")+"}","$"+НомерПараметра));
		НомерПараметра = НомерПараметра + 1;
	КонецЦикла;
	Шаблон = СтрЗаменить(Шаблон,"""","\""");

	Возврат Шаблон;
	
КонецФункции
